Model、View、Presenter  ，从p层到view层有双向的绑定，造成P层臃肿维护困难。
将UI渲染放在了P层，UI和P层会交互频繁。
MVVM   Model、View、ViewModel
ViewModel优点：1、同步关联生命周期 2、当配置发生改变时，存储数据。
和MVP最大的不同是：view和model不在产生交互，做到了极大的解耦。
livedata：
 1、确保用户界面与数据状态匹配
     LiveData遵循观察者模式。LiveData在生命周期状态更改时通知观察者对象。您可以合并代码来更新这些观察者对象中的UI。与每次应用数据更改时更新用户界面不同，
观察者可以在每次发生更改时更新用户界面
 2、不会造成内存泄漏
     观察者被绑定在生命周期对象上，当被关联的生命周期破环后被及时的清理。
 3、不会因停止活动而导致崩溃
    如果观察者是非活动状态的例如活动处于后台的服务中，那么livedata不会接收到任何的事件。
 4、不在需要手动处理生命周期
    UI组件只会观察相关的数据，不停止或者继续观察。livedata会自动的去观察，应为它是和生命周期相关联的。
